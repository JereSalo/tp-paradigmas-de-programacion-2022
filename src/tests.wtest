import wollok.game.*
import configuracion.*
import direcciones.*
import juego.*
import main.*
import niveles.*
import nivel1.*
import nivel2.*
import nivel3.*
import nivel4.*
import nivel5.*

describe "Piramide De Maslow" {
	
	test "Si un personaje choca con la caja, éste se mantiene en su posición"
	{
		nivel1.reiniciarse()
		personajeFuerte.position(game.at(2, 5))
		personajeFuerte.moverA(arriba)
		assert.that(personajeFuerte.position() == game.at(2,5))
	}
	
	test "Si el personaje fuerte choca con la caja, la misma es desplazada en la dirección en que se movió el personaje"
	{
		nivel1.reiniciarse()
		personajeFuerte.position(game.at(2,5))
		personajeFuerte.moverA(arriba)
		assert.that(nivel1.cajas().all{caja => caja.position() == game.at(2,7)})
	}
	
	test "Si el personaje se mueve hacia abajo, no puede porque hay una pared"
	{
		game.clear()
		game.addVisual(personajeFuerte)
		personajeFuerte.position(game.at(3, 5))
		const pared = new Pared(position = game.at(3, 4))
		game.addVisual(pared)
		personajeFuerte.moverA(abajo)
		assert.equals(personajeFuerte.position(), game.at(3,5)) 
	}
	
	test "El personaje inteligente no puede mover la caja"
	{
		nivel1.reiniciarse()
		personajeInteligente.position(game.at(2,5))
		personajeInteligente.moverA(arriba)
		assert.that(nivel1.cajas().all{caja => caja.position() == game.at(2,6)})
	}
	 
	test "Si el personaje esta en la misma posicion que la placa, ésta se activa"
	{
		nivel1.reiniciarse()
		const placa = new Placa()
		game.addVisual(placa)
		placa.colisionarConPersonaje(personajeInteligente)
		assert.that(placa.activado())
	}
	
	test "Si el personaje inteligente se para sobre el código, éste se desbloquea"
	{
		nivel1.reiniciarse()
		const codigo = new Codigo()
		codigo.crear()
		codigo.configuracionInicial()
		codigo.colisionarConPersonaje(personajeInteligente)
		assert.that(codigo.activado())
	}
	
	test "Si el personaje fuerte se para sobre el código, éste no se desbloquea"
	{
		nivel1.reiniciarse()
		const codigo = new Codigo()
		codigo.crear()
		codigo.configuracionInicial()
		codigo.colisionarConPersonaje(personajeFuerte)
		assert.that(!codigo.activado())
	}
	
	test "Si un personaje pisa los pinches pierde una vida"
	{
		nivel1.reiniciarse()
		const pinche = new Pinche()
		pinche.position(game.at(7,5))
		game.addVisual(pinche)
		pinche.colisionarConPersonaje(personajeInteligente)
		assert.equals(gestorNiveles.vidas(),2)
	}
	
	test "Si un personaje pisa los superpinches pierde dos vidas"
	{
		nivel1.reiniciarse()
		const pinche = new SuperPinche()
		game.addVisual(pinche)
		pinche.position(game.at(7,5))
		pinche.colisionarConPersonaje(personajeInteligente)
		assert.equals(gestorNiveles.vidas(),1)
	}
	
	test "Si se pierden todas las vidas, el juego finaliza"
	{
		gestorNiveles.perderVida()
		gestorNiveles.perderVida()
		assert.throwsException({gestorNiveles.perderVida()})
	}

	test "Si el personaje llega a la comida pasa al siguiente nivel"
	{
		nivel1.reiniciarse()
		nivel1.objetoGanador().colisionarConPersonaje(personajeInteligente)
		assert.that(gestorNiveles.nivelActualNumero() == 2)
	}
}
