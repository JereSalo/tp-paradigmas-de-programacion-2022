import example.*

// Especies genéricas
const especieAnimal = new EspecieAnimal(formaLocomocion = nada, pesoReferencia = 10, coeficiente = 1)
const especiePlanta = new EspeciePlanta()

// Habitats genericos
const habitatEjemplo1 = new Habitat(flora = [plantaMini], fauna = [])
const habitatEjemplo2 = new Habitat(flora = [], fauna = [])

// Algunos animales/plantas de ejemplo para testing en general
// Sirven tanto para testing de biomasa como para testing de equilibrio
const plantaEnorme = new Planta(altura = 10000, especie = especiePlanta)
const plantaMini = new Planta(altura = 1, especie = especiePlanta)
const animalChiquito = new Animal(peso = 1, especie = especieAnimal)

// Punto 1



test "Habitat con mayor biomasa" {
	const habitatMuchaBiomasa = new Habitat(flora = [plantaEnorme], fauna = [])
	const habitatPocaBiomasa = new Habitat(flora = [], fauna = [])	
	reservaNatural.habitats([habitatMuchaBiomasa,habitatPocaBiomasa])
	
	assert.equals(habitatMuchaBiomasa,reservaNatural.habitatMayorBiomasa())
}

// Punto 2

test "Cantidad total de biomasa en una reserva es igual a la suma de la cantidad de biomasa de cada habitat"{
	reservaNatural.habitats([habitatEjemplo1,habitatEjemplo2])
	
	assert.equals(habitatEjemplo1.biomasaTotal() + habitatEjemplo2.biomasaTotal(),reservaNatural.biomasaTotal())
}

// Punto 3

test "Habitat está en equilibrio cuando hay muchos ejemplares chicos en comparacion con los grandes y alguno está vivo"{
	const habitatEquilibrado = new Habitat(flora = [plantaEnorme,plantaMini,plantaMini,plantaMini], fauna = [animalChiquito])
	
	assert.that(habitatEquilibrado.estaEquilibrado())
}

test "Habitat no está en equilibrio cuando no hay muchos ejemplares chicos en comparacion con los grandes y alguno está vivo"{
	const habitatDesequilibrado = new Habitat(flora = [plantaMini,plantaEnorme], fauna = [])
	
	assert.notThat(habitatDesequilibrado.estaEquilibrado())
}

test "Habitat no está en equilibrio cuando hay muchos ejemplares chicos en comparacion con los grandes y ninguno está vivo"{
	const habitatDesequilibrado = new Habitat(flora = [plantaEnorme], fauna = [animalChiquito,animalChiquito,animalChiquito,animalChiquito])
	
	plantaEnorme.morir()
	animalChiquito.morir()
	
	
	assert.notThat(habitatDesequilibrado.estaEquilibrado())
}

// Punto 4

test "Test de habitats desequilibrados en reserva"{
	const habitatDesequilibrado = new Habitat(flora = [plantaEnorme], fauna = [animalChiquito])
	const habitatEquilibrado = new Habitat(flora = [plantaEnorme,plantaMini,plantaMini,plantaMini], fauna = [animalChiquito])
	
	reservaNatural.habitats([habitatEquilibrado,habitatDesequilibrado])
	
	assert.equals([habitatDesequilibrado],reservaNatural.habitatsSinEquilibrio())
}

// PUNTO 5

test "Test de si una especie está en todos los hábitats Verdadero"{
	const habitat1 = new Habitat(flora = [plantaEnorme], fauna = [animalChiquito])
	const habitat2 = new Habitat(flora = [plantaEnorme,plantaMini], fauna = [])
	reservaNatural.habitats([habitat1,habitat2])
	assert.that(reservaNatural.estaEnTodos(plantaEnorme))
}		
	
test "Test de si una especie está en todos los hábitats Falso"{
	const habitat1 = new Habitat(flora = [plantaEnorme], fauna = [animalChiquito])
	const habitat2 = new Habitat(flora = [plantaEnorme,plantaMini], fauna = [])
	reservaNatural.habitats([habitat1,habitat2])
	assert.notThat(reservaNatural.estaEnTodos(plantaMini))
}
	
	
// PUNTO 6

test "Cuando se incendia un habitat con animal acuatico y planta chiquita, esta última muere y el primero no"{
	const habitatAcuaticoChiquita= new Habitat(flora = [girasol], fauna = [delfin])
	
	habitatAcuaticoChiquita.incendio()
	
	assert.that(!girasol.vivo() and delfin.vivo())
}





